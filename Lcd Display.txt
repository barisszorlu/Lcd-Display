#include <stdint.h>
#include "inc/tm4c123gh6pm.h"

void init_port_B() {
    volatile unsigned long delay;
    SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOB;
    delay = SYSCTL_RCGC2_R;
    GPIO_PORTB_DIR_R |= 0xFF; // 0xff == 0b11111111, hepsini cikis olarak ayarla
    GPIO_PORTB_AFSEL_R &= ~0xFF; // alternatif fonksiyo kapali
    GPIO_PORTB_DEN_R |= 0xFF; // hepsi aktif
}
void init_port_E() {
   volatile unsigned long tmp; // bu degisken gecikme yapmak icin gerekli
   tmp = SYSCTL_RCGCGPIO_R;    	// allow time for clock to start
   SYSCTL_RCGCGPIO_R |= 0x00000010;  // 1) activate clock for Port F
   GPIO_PORTE_LOCK_R = 0x4C4F434B;   // 2) unlock GPIO Port F
   GPIO_PORTE_CR_R = 0x01;       	// allow changes to PF-0
   // only PF0 needs to be unlocked, other bits can't be locked
   GPIO_PORTE_DIR_R = 0x00;      	// 5) PF4,PF0 in, PF3-1 out
   GPIO_PORTE_PUR_R = 0x0F;      	// enable pull-up on PF0 and PF4
   GPIO_PORTE_DEN_R = 0x1F;      	// 7) enable digital I/O on PF4-0
}


// 0'dan 9'a kadar olan sayilarin seven segment kodlari
// bit sirasi: g f e d c b a
uint8_t kodlar[16] = {
    ~0b0111111,//0
    ~0b0000110,//1
    ~0b1011011,//2
    ~0b1001111,//3
    ~0b1100110,//4
    ~0b1101101,//5
    ~0b1111101,//6
    ~0b0000111,//7
    ~0b1111111,//8
    ~0b1101111,//9
	~0b1110111,//A
	~0b1111100,//B
	~0b0111001,//C
	~0b1011110,//D
	~0b1111001,//E
	~0b1110001//F
};

int main() {
    volatile unsigned long delay;

    init_port_B();
    init_port_E();

    while (1) {
    	 int sayi[4];
    	        	    int disp;
    	        	    int buton1 = GPIO_PORTE_DATA_R & 0b00000001;
    	        	    int buton2 = GPIO_PORTE_DATA_R & 0b00000010;
    	        	    int buton3 = GPIO_PORTE_DATA_R & 0b00000100;
    	        	    int buton4 = GPIO_PORTE_DATA_R & 0b00001000;


    	if (buton1 == 0)
    		sayi[0] = 1;
    	else
    		sayi[0] = 0;

    	if (buton2 == 0)
    	    sayi[1] = 2;
    	else
    	    sayi[1] = 0;

    	if (buton3 == 0)
    		sayi[2] = 4;
    	else
    		sayi[2] = 0;

    	if (buton4 == 0)
    		sayi[3] = 8;
    	else
    		sayi[3] = 0;

    	disp = sayi[0] + sayi[1] + sayi[2] + sayi[3];

    	GPIO_PORTB_DATA_R = kodlar[disp];

    }
}

#include <stdint.h>
#include "inc/tm4c123gh6pm.h"

void init_port_B() {
    volatile unsigned long delay;
    SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOB;
    delay = SYSCTL_RCGC2_R;
    GPIO_PORTB_DIR_R |= 0xFF; // 0xff == 0b11111111, hepsini cikis olarak ayarla
    GPIO_PORTB_AFSEL_R &= ~0xFF; // alternatif fonksiyo kapali
    GPIO_PORTB_DEN_R |= 0xFF; // hepsi aktif
}
void init_port_E() {
   volatile unsigned long tmp; // bu degisken gecikme yapmak icin gerekli
   tmp = SYSCTL_RCGCGPIO_R;    	// allow time for clock to start
   SYSCTL_RCGCGPIO_R |= 0x00000010;  // 1) activate clock for Port F
   GPIO_PORTE_LOCK_R = 0x4C4F434B;   // 2) unlock GPIO Port F
   GPIO_PORTE_CR_R = 0x01;       	// allow changes to PF-0
   // only PF0 needs to be unlocked, other bits can't be locked
   GPIO_PORTE_DIR_R = 0x00;      	// 5) PF4,PF0 in, PF3-1 out
   GPIO_PORTE_PUR_R = 0x0F;      	// enable pull-up on PF0 and PF4
   GPIO_PORTE_DEN_R = 0x1F;      	// 7) enable digital I/O on PF4-0
}


// 0'dan 9'a kadar olan sayilarin seven segment kodlari
// bit sirasi: g f e d c b a
uint8_t kodlar[16] = {
    ~0b0111111,//0
    ~0b0000110,//1
    ~0b1011011,//2
    ~0b1001111,//3
    ~0b1100110,//4
    ~0b1101101,//5
    ~0b1111101,//6
    ~0b0000111,//7
    ~0b1111111,//8
    ~0b1101111,//9
	~0b1110111,//A
	~0b1111100,//B
	~0b0111001,//C
	~0b1011110,//D
	~0b1111001,//E
	~0b1110001//F
};

int main() {
    volatile unsigned long delay;

    init_port_B();
    init_port_E();

    while (1) {
    	 int sayi[4];
    	        	    int disp;
    	        	    int buton1 = GPIO_PORTE_DATA_R & 0b00000001;
    	        	    int buton2 = GPIO_PORTE_DATA_R & 0b00000010;
    	        	    int buton3 = GPIO_PORTE_DATA_R & 0b00000100;
    	        	    int buton4 = GPIO_PORTE_DATA_R & 0b00001000;


    	if (buton1 == 0)
    		sayi[0] = 1;
    	else
    		sayi[0] = 0;

    	if (buton2 == 0)
    	    sayi[1] = 2;
    	else
    	    sayi[1] = 0;

    	if (buton3 == 0)
    		sayi[2] = 4;
    	else
    		sayi[2] = 0;

    	if (buton4 == 0)
    		sayi[3] = 8;
    	else
    		sayi[3] = 0;

    	disp = sayi[0] + sayi[1] + sayi[2] + sayi[3];

    	GPIO_PORTB_DATA_R = kodlar[disp];

    }
}